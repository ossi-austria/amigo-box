import org.ossiaustria.dependencies.AndroidVersion
import org.ossiaustria.dependencies.Libs

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'dagger.hilt.android.plugin'
    id 'jacoco'

}

android {

    compileSdkVersion AndroidVersion.compileSdk

    defaultConfig {
        minSdkVersion AndroidVersion.minSdk
        targetSdkVersion AndroidVersion.targetSdk
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental":"true"]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    testOptions {
        reportDir "${rootProject.buildDir}/test-reports"
        resultsDir "${rootProject.buildDir}/test-results"
        junitPlatform { instrumentationTests.integrityCheckEnabled = true }
        unitTests { includeAndroidResources = true }
    }
    kapt { correctErrorTypes true }
    kotlinOptions { jvmTarget = '1.8' }
}

dependencies {

    api project(":lib-commons")

    // Room & Persistance
    implementation(Libs.dropboxStore)
    implementation(Libs.roomRuntime)
    kapt(Libs.roomCompiler)
    implementation(Libs.roomKtx)
    testImplementation(Libs.roomTesting)

    // Android, material & friends
    implementation(Libs.timber)
    implementation(Libs.appcompat)
//     implementation(Libs.Compose.material)
    implementation Libs.Security.crypto
    // retrofit & web
    api(Libs.retrofit)
    implementation(Libs.retrofitJson)
    implementation(Libs.loggingInterceptor)

    // hilt & dagger
    implementation(Libs.hiltAndroid)
    implementation(Libs.hiltCommon)
    implementation(Libs.hiltLifecycle)
    kapt(Libs.hiltAndroidCompiler)
    kapt(Libs.hiltCompiler)

    testImplementation(Libs.hiltAndroidTesting)
    kaptTest(Libs.hiltAndroidCompiler)
    kaptTest(Libs.hiltCompiler)

    // Testing
    testImplementation project(':lib-test-commons')
    testImplementation(Libs.Test.jupiterApi)
    testImplementation(Libs.Test.jupiterParams)
//    testRuntimeOnly(Libs.Test.jupiterEngine) Junit5 still broken
    testRuntimeOnly(Libs.Test.jupiterVintageEngine)

    androidTestImplementation(Libs.Test.testRunner)
    androidTestImplementation(Libs.Test.jupiterApi)
    androidTestImplementation(Libs.Test.mannodermausAndroidTestCore)
    androidTestRuntimeOnly(Libs.Test.mannodermausAndroidTestRunner)

    testImplementation(Libs.Test.test)
    testImplementation(Libs.Test.testExt)
    testImplementation(Libs.Test.robolectric)
    implementation(Libs.Test.coroutinesTest)
    testImplementation(Libs.Lifecycle.coreTesting)
    testImplementation(Libs.Test.mockk)
    androidTestImplementation(Libs.Test.mockkAndroid)

    androidTestImplementation(Libs.Test.espressoCore)
    androidTestImplementation(Libs.Test.espressoContrib)
    androidTestImplementation(Libs.Test.barista)
    androidTestImplementation(Libs.Test.testRunner)
    androidTestImplementation(Libs.Test.testExt)
    androidTestImplementation(Libs.Test.testRules)

}

