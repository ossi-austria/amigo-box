import org.ossiaustria.dependencies.AndroidVersion
import org.ossiaustria.dependencies.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '1.2.4'
}

android {

    compileSdkVersion AndroidVersion.compileSdk
    buildToolsVersion AndroidVersion.buildTools

    defaultConfig {
        applicationId "org.ossiaustria.amigobox"
        minSdkVersion AndroidVersion.minSdk
        targetSdkVersion AndroidVersion.targetSdk
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            testCoverageEnabled true
            buildConfigField "String", "API_ENDPOINT", "\"API_ENDPOINT\""
        }
        release {
            minifyEnabled true
            useProguard true
            shrinkResources true
           // proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

        }
    }

    kapt { correctErrorTypes true }
    kotlinOptions { jvmTarget = '1.8' }
}


dependencies {
    implementation project(":lib-commons")
    implementation project(":lib-domain")
    implementation project(":lib-nfc")
    implementation(Libs.appcompat)
    implementation(Libs.Compose.material)
    implementation(Libs.material)

    implementation(Libs.hiltAndroid)
    implementation(Libs.hiltCommon)
    implementation(Libs.hiltLifecycle)
    kapt(Libs.hiltAndroidCompiler)
    kapt(Libs.hiltCompiler)

    implementation(Libs.coroutinesAndroid)
    implementation(Libs.coroutinesCore)
    implementation(Libs.Lifecycle.livedata)
    implementation(Libs.Lifecycle.livedataKtx)
    implementation(Libs.Lifecycle.lifecycleKtx)

    implementation(Libs.navigationRuntimeKtx)
    implementation(Libs.navigationFragmentKtx)
    implementation(Libs.navigationUiKtx)
    implementation(Libs.navigationDynamicFeatures)
    androidTestImplementation(Libs.navigationTest)

    implementation(Libs.timber)

    // Testing
    testImplementation(Libs.Test.jupiterApi)
    testImplementation(Libs.Test.jupiterParams)
//    testRuntimeOnly(Libs.Test.jupiterEngine) Junit5 still broken
    testRuntimeOnly(Libs.Test.jupiterVintageEngine)

    androidTestImplementation(Libs.Test.testRunner)
    androidTestImplementation(Libs.Test.jupiterApi)
    androidTestImplementation(Libs.Test.mannodermausAndroidTestCore)
    androidTestRuntimeOnly(Libs.Test.mannodermausAndroidTestRunner)

    testImplementation(Libs.Test.test)
    testImplementation(Libs.Test.testExt)
    implementation(Libs.Test.coroutinesTest)
    testImplementation(Libs.Test.coroutinesTest)
    testImplementation(Libs.Lifecycle.coreTesting)
    testImplementation(Libs.Test.mockk)
    androidTestImplementation(Libs.Test.mockkAndroid)

    androidTestImplementation(Libs.Test.espressoCore)
    androidTestImplementation(Libs.Test.espressoContrib)
    androidTestImplementation(Libs.Test.barista)
    androidTestImplementation(Libs.Test.testRunner)
    androidTestImplementation(Libs.Test.testExt)
    androidTestImplementation(Libs.Test.testRules)

    //Jitsi
    implementation ('org.jitsi.react:jitsi-meet-sdk:2.+') { transitive = true }

    //Premissions
    implementation Libs.permissions

}
